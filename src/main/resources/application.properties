spring.application.name=catalog-service
# Porta su cui l'applicazione sara in ascolto
server.port=9001

# Timeout massimo per ricevere una richiesta HTTP dopo che la connessione TCP e stata accettata
server.tomcat.connection-timeout=2s

# Timeout massimo per mantenere viva una connessione HTTP in attesa di nuove richieste
server.tomcat.keep-alive-timeout=15s

# Numero massimo di thread per gestire richieste contemporanee
server.tomcat.threads.max=50

# Numero minimo di thread che devono essere sempre attivi (creati all'avvio)
server.tomcat.threads.min-spare=5

#Config Server
spring.config.import=optional:configserver:http://localhost:8888

#tempo massimo di attesa per stabilire la connessione al Config Server
spring.cloud.config.request.connect-timeout=5000

#tempo massimo di attesa per ricevere una risposta dal Config Server
spring.cloud.config.request.read-timeout=5000

# Configurazione per il retry in caso di errore di connessione al Config Server
#in locale impostato a false per evitare di entrare in un loop infinito
spring.cloud.config.fail-fast=false
spring.cloud.config.retry.max-attempts=6
spring.cloud.config.retry.initial-interval=1000
spring.cloud.config.retry.max-interval=2000
spring.cloud.config.retry.multiplier=1.1

#actuator
#esporre l?endpoint /actuator/refresh via HTTP
#utile per forzare il refresh della configurazione in un'app Spring Cloud Config client.
management.endpoints.web.exposure.include=refresh



polar.greeting = "Welcome to the local book catalog!"